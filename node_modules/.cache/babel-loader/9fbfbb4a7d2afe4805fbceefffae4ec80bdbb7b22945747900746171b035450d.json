{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: {\n    userinfo: '',\n    useridx: ''\n  }\n};\nexport const counterSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: {},\n    userid: {}\n  },\n  initialState,\n  reducers: {\n    adduser: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.user = action.payload;\n    },\n    userlist: state => {\n      state.value.userinfo = state.user.lists;\n    },\n    adduserid: (state, action) => {\n      state.userid = action.payload;\n    },\n    adduseridget: state => {\n      state.value.useridx = state.userid;\n    },\n    deleteuser: (state, action) => {\n      return filter(users => users.id != action.payload.id);\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  adduser,\n  userlist,\n  adduserid,\n  adduseridget,\n  deleteuser\n} = counterSlice.actions;\nexport const selectUser = state => state.user.user;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","userinfo","useridx","counterSlice","name","user","userid","reducers","adduser","state","action","payload","userlist","lists","adduserid","adduseridget","deleteuser","filter","users","id","actions","selectUser","reducer"],"sources":["/Users/karan/Projects/Priyanka/ReactJs-Pro/Car-Service-Center/my-car/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  value: {\n    userinfo:'',\n    useridx:'',\n  },\n}\n\nexport const counterSlice = createSlice({\n  name: 'user',\n  initialState : {\n    user:{},\n    userid:{},\n  },\n  initialState,\n  reducers: {\n      adduser: (state, action) => {\n        // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n        // doesn't actually mutate the state because it uses the Immer library,\n        // which detects changes to a \"draft state\" and produces a brand new\n        // immutable state based off those changes\n        state.user = action.payload;\n      },\n      userlist: (state) => {\n        state.value.userinfo =  state.user.lists\n     },\n      adduserid: (state, action) => {\n        state.userid = action.payload;\n      },\n      adduseridget: (state) => {\n        state.value.useridx =  state.userid\n     },\n     deleteuser: (state, action) => {\n      return  filter(users=>users.id != action.payload.id)\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const {  adduser,userlist,adduserid,adduseridget ,deleteuser} = counterSlice.actions\n\nexport const selectUser = (state) => state.user.user;\n\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;IACLC,QAAQ,EAAC,EAAE;IACXC,OAAO,EAAC;EACV;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGL,WAAW,CAAC;EACtCM,IAAI,EAAE,MAAM;EACZL,YAAY,EAAG;IACbM,IAAI,EAAC,CAAC,CAAC;IACPC,MAAM,EAAC,CAAC;EACV,CAAC;EACDP,YAAY;EACZQ,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B;MACA;MACA;MACA;MACAD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,QAAQ,EAAGH,KAAK,IAAK;MACnBA,KAAK,CAACT,KAAK,CAACC,QAAQ,GAAIQ,KAAK,CAACJ,IAAI,CAACQ,KAAK;IAC3C,CAAC;IACAC,SAAS,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACH,MAAM,GAAGI,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDI,YAAY,EAAGN,KAAK,IAAK;MACvBA,KAAK,CAACT,KAAK,CAACE,OAAO,GAAIO,KAAK,CAACH,MAAM;IACtC,CAAC;IACDU,UAAU,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC9B,OAAQO,MAAM,CAACC,KAAK,IAAEA,KAAK,CAACC,EAAE,IAAIT,MAAM,CAACC,OAAO,CAACQ,EAAE,CAAC;IACtD;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAGX,OAAO;EAACI,QAAQ;EAACE,SAAS;EAACC,YAAY;EAAEC;AAAU,CAAC,GAAGb,YAAY,CAACiB,OAAO;AAE3F,OAAO,MAAMC,UAAU,GAAIZ,KAAK,IAAKA,KAAK,CAACJ,IAAI,CAACA,IAAI;AAEpD,eAAeF,YAAY,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}